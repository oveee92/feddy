---

# Window list at the bottom

- name: (gnome_other) - List the enabled gnome-extensions
  command: gnome-extensions list --enabled
  register: _extensions_list
  changed_when: false
  become: false

- name: (gnome_other) - Enable the window list extension when it isn't already enabled
  command: gnome-extensions enable window-list@gnome-shell-extensions.gcampax.github.com
  when: "'window-list@gnome-shell-extensions.gcampax.github.com' not in _extensions_list.stdout_lines"
  become: false

# Terminal theme stuff

- name: (gnome_other) - Get the terminal profiles list
  dconf:
    state: read
    key: "/org/gnome/terminal/legacy/profiles:/list"
  register: _terminal_profiles
  become: false

- name: (gnome_other) - Create a temporary list to work with
  set_fact:
    _wip_profile_list: "{{ _terminal_profiles.value }}"

- name: Compile a list of the profiles, generating a uuid from the profile name
  set_fact:
    _wip_profile_list: "{{  _wip_profile_list + [item.profile_name | to_uuid] }}"
  when: (item.profile_name | to_uuid) not in _wip_profile_list
  loop: "{{ gnome_terminal_settings | dict2items(key_name='profile_name',value_name='profile_values') }}"

- name: (gnome_other) - Add the new profiles with dconf
  dconf:
    key: /org/gnome/terminal/legacy/profiles:/list
    value: "{{ _wip_profile_list }}"

- debug:
    var: _wip_profile_list

- fail:

- name: (gnome_other) - Create each profile
  when:
    - not _terminal_profiles.value or _terminal_profiles.value | length == 0
  block:
    - name: (gnome_other) - Create a random uuid
      set_fact:
        _random_uuid: "{{ 9999999999999999999999 | random | to_uuid }}"
    - name: (gnome_other) - Set it as the terminal profile to change
      set_fact:
        _terminal_profile_custom: "{{ _random_uuid }}"
    - name: (gnome_other) - Set it in dconf as a new profile
      dconf:
        key: /org/gnome/terminal/legacy/profiles:/list
        value: "['{{ _random_uuid }}']"
  become: false


#- name: (gnome_other) - If list is not empty and custom profile is not defined, select the first profile by default
#  vars:
#    _intermediary: "{{ _terminal_profiles.value }}"
#  set_fact:
#    _terminal_profile_custom: "{{ _intermediary[0] }}"
#  when:
#    - terminal_profile_to_edit == ""
#    - _terminal_profile_custom == ""
#    - _terminal_profiles.value
#  become: false

- name: (gnome_other) - Loop through each entry
  dconf:
    key: "/org/gnome/terminal/legacy/profiles:/:{{ _terminal_profile_custom }}/{{ item.key }}" # pay attention to the colons
    value: "{{ item.val }}"
  loop: "{{ gnome_terminal_settings }}"
  become: false

- name: (gnome_other) - Set the Solarized dark dircolors, for pretty directory listings
  copy:
    src: gnome_other/dircolors.ansi-dark
    dest: ~/.dircolors
    mode: '0644'
  become: false

# TODO: Add the AppIndicator and KStatusNotifier Support if possible
